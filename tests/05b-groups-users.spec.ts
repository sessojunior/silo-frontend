import { test, expect } from './utils/auth-helpers'

test.describe('üë• Grupos - Gest√£o de Usu√°rios', () => {
	test('‚úÖ Carregamento da p√°gina - estrutura b√°sica', async ({ authenticatedPage }) => {
		await authenticatedPage.goto('/admin/groups/users')

		// Verificar se p√°gina carregou
		await expect(authenticatedPage.getByRole('heading', { name: /usu√°rios/i })).toBeVisible()

		// Verificar se bot√£o de criar est√° presente
		await expect(authenticatedPage.getByRole('button', { name: /criar|novo/i })).toBeVisible()
	})

	test('‚úÖ Lista de usu√°rios - estrutura b√°sica', async ({ authenticatedPage }) => {
		await authenticatedPage.goto('/admin/groups/users')

		// Verificar se p√°gina carregou
		await expect(authenticatedPage.getByRole('heading', { name: /usu√°rios/i })).toBeVisible()

		// Verificar se h√° usu√°rios na lista
		await expect(authenticatedPage.locator('table tbody tr').first()).toBeVisible()
	})

	test('‚úÖ Navega√ß√£o por abas - estrutura b√°sica', async ({ authenticatedPage }) => {
		await authenticatedPage.goto('/admin/groups/users')

		// Verificar se abas est√£o presentes
		await expect(authenticatedPage.locator('a[role="button"]:has-text("Grupos")')).toBeVisible()
		await expect(authenticatedPage.locator('a[role="button"]:has-text("Usu√°rios")')).toBeVisible()
	})

	test('‚úÖ Responsividade em diferentes resolu√ß√µes', async ({ authenticatedPage }) => {
		await authenticatedPage.goto('/admin/groups/users')

		// Testar em resolu√ß√£o desktop
		await authenticatedPage.setViewportSize({ width: 1920, height: 1080 })
		await expect(authenticatedPage.getByRole('heading', { name: /usu√°rios/i })).toBeVisible()

		// Testar em resolu√ß√£o tablet
		await authenticatedPage.setViewportSize({ width: 768, height: 1024 })
		await authenticatedPage.reload()
		await expect(authenticatedPage.getByRole('heading', { name: /usu√°rios/i })).toBeVisible()

		// Testar em resolu√ß√£o mobile
		await authenticatedPage.setViewportSize({ width: 375, height: 667 })
		await authenticatedPage.reload()
		await expect(authenticatedPage.getByRole('heading', { name: /usu√°rios/i })).toBeVisible()

		// Voltar para desktop
		await authenticatedPage.setViewportSize({ width: 1920, height: 1080 })
	})
})
