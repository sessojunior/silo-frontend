import { test, expect } from './utils/auth-helpers'

test.describe('üìä Dashboard - Interface e Navega√ß√£o', () => {
	test('‚úÖ Responsividade em diferentes resolu√ß√µes', async ({ authenticatedPage }) => {
		await authenticatedPage.goto('/admin/dashboard')

		// Aguardar carregamento da p√°gina
		await authenticatedPage.waitForLoadState('networkidle')

		// Rolar a p√°gina para baixo para visualizar os gr√°ficos
		await authenticatedPage.evaluate(() => window.scrollTo(0, document.body.scrollHeight))

		// Aguardar um pouco para os gr√°ficos renderizarem ap√≥s o scroll
		await authenticatedPage.waitForTimeout(2000)

		// Testar resolu√ß√£o desktop
		await authenticatedPage.setViewportSize({ width: 1920, height: 1080 })
		await expect(authenticatedPage.getByText('Causas de problemas (28 dias)')).toBeVisible()

		// Testar resolu√ß√£o tablet
		await authenticatedPage.setViewportSize({ width: 768, height: 1024 })
		await expect(authenticatedPage.getByText('Causas de problemas (28 dias)')).toBeVisible()

		// Testar resolu√ß√£o mobile
		await authenticatedPage.setViewportSize({ width: 375, height: 667 })
		await expect(authenticatedPage.getByText('Causas de problemas (28 dias)')).toBeVisible()

		// Voltar para resolu√ß√£o padr√£o
		await authenticatedPage.setViewportSize({ width: 1280, height: 720 })
	})

	test('‚úÖ Navega√ß√£o para outras p√°ginas a partir do dashboard', async ({ authenticatedPage }) => {
		await authenticatedPage.goto('/admin/dashboard')

		// Aguardar carregamento da p√°gina
		await authenticatedPage.waitForLoadState('networkidle')

		// Rolar a p√°gina para baixo para visualizar os gr√°ficos
		await authenticatedPage.evaluate(() => window.scrollTo(0, document.body.scrollHeight))

		// Aguardar um pouco para os gr√°ficos renderizarem ap√≥s o scroll
		await authenticatedPage.waitForTimeout(2000)

		// Verificar se links de navega√ß√£o est√£o vis√≠veis na sidebar
		await expect(authenticatedPage.getByRole('link', { name: /produtos/i })).toBeVisible()

		// Clicar em um link para verificar navega√ß√£o - usar link mais confi√°vel
		await authenticatedPage.getByRole('link', { name: /ajuda/i }).first().click()
		await authenticatedPage.waitForURL('/admin/help')
	})
})
