import { test, expect } from './utils/auth-helpers'

test.describe('üí° Sistema de Solu√ß√µes', () => {
	test.describe('üìù CRUD de Solu√ß√µes', () => {
		test('‚úÖ Estrutura b√°sica - p√°gina de solu√ß√µes', async ({ authenticatedPage }) => {
			await authenticatedPage.goto('/admin/products/bam/problems')
			await authenticatedPage.waitForLoadState('networkidle')

			// Verificar se p√°gina carregou
			await expect(authenticatedPage.getByRole('heading', { name: /problemas/i })).toBeVisible()
		})

		test('‚úÖ Interface de solu√ß√µes - elementos b√°sicos', async ({ authenticatedPage }) => {
			await authenticatedPage.goto('/admin/products/bam/problems')
			await authenticatedPage.waitForLoadState('networkidle')

			// Verificar se √°rea de problemas est√° presente
			const problemsArea = authenticatedPage.locator('div.space-y-4')
			if ((await problemsArea.count()) > 0) {
				await expect(problemsArea.first()).toBeVisible()
			}
		})
	})

	test.describe('üñºÔ∏è Upload de Imagens', () => {
		test('‚úÖ √Årea de upload - estrutura b√°sica', async ({ authenticatedPage }) => {
			await authenticatedPage.goto('/admin/products/bam/problems')
			await authenticatedPage.waitForLoadState('networkidle')

			// Verificar se √°rea de upload est√° presente (se existir)
			const uploadArea = authenticatedPage.locator('[data-ut-element="upload-button"]')
			if ((await uploadArea.count()) > 0) {
				await expect(uploadArea).toBeVisible()
			} else {
				// Se n√£o houver upload, apenas verificar se p√°gina carregou
				await expect(authenticatedPage.getByRole('heading', { name: /problemas/i })).toBeVisible()
			}
		})
	})

	test.describe('‚úÖ Valida√ß√£o de Solu√ß√µes', () => {
		test('‚úÖ Interface de valida√ß√£o - elementos b√°sicos', async ({ authenticatedPage }) => {
			await authenticatedPage.goto('/admin/products/bam/problems')
			await authenticatedPage.waitForLoadState('networkidle')

			// Verificar se p√°gina carregou
			await expect(authenticatedPage.getByRole('heading', { name: /problemas/i })).toBeVisible()
		})
	})
})
