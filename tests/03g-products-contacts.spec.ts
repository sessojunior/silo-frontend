import { test, expect } from './utils/auth-helpers'

test.describe('üë• Associa√ß√£o Produto-Contato', () => {
	test('‚úÖ Visualiza√ß√£o - exibe contatos associados', async ({ authenticatedPage }) => {
		await authenticatedPage.goto('/admin/products/bam')
		await authenticatedPage.waitForLoadState('networkidle')

		// Verificar se a p√°gina carregou corretamente
		await expect(authenticatedPage.getByText('Base de conhecimento')).toBeVisible()

		// Verificar se h√° contatos associados
		await expect(authenticatedPage.locator('h3:has-text("Contatos em caso de problemas")')).toBeVisible()

		// Verificar se h√° pelo menos um contato listado (usar .first() para evitar strict mode)
		await expect(authenticatedPage.locator('div:has-text("Carlos Eduardo Silva")').first()).toBeVisible()
	})

	test('‚úÖ Gerenciamento - permite abrir seletor de contatos', async ({ authenticatedPage }) => {
		await authenticatedPage.goto('/admin/products/bam')
		await authenticatedPage.waitForLoadState('networkidle')

		// Verificar se a p√°gina carregou corretamente
		await expect(authenticatedPage.getByText('Base de conhecimento')).toBeVisible()

		// Clicar no bot√£o de gerenciar contatos
		await authenticatedPage.locator('button:has-text("Gerenciar contatos")').click()

		// Verificar se o seletor de contatos abriu
		await expect(authenticatedPage.locator('div:has-text("Selecionar Contatos")').first()).toBeVisible()

		// Aguardar um pouco para os contatos carregarem
		await authenticatedPage.waitForTimeout(2000)

		// Verificar se h√° contatos dispon√≠veis para sele√ß√£o (usar .first() para evitar strict mode)
		await expect(authenticatedPage.locator('div:has-text("Carlos Eduardo Silva")').first()).toBeVisible()
		await expect(authenticatedPage.locator('div:has-text("Maria Fernanda Santos")').first()).toBeVisible()
	})

	test('‚úÖ Interface - exibe informa√ß√µes de contatos corretamente', async ({ authenticatedPage }) => {
		await authenticatedPage.goto('/admin/products/bam')
		await authenticatedPage.waitForLoadState('networkidle')

		// Verificar se a p√°gina carregou corretamente
		await expect(authenticatedPage.getByText('Base de conhecimento')).toBeVisible()

		// Verificar se a se√ß√£o de contatos est√° vis√≠vel
		await expect(authenticatedPage.locator('h3:has-text("Contatos em caso de problemas")')).toBeVisible()

		// Verificar se h√° informa√ß√µes sobre respons√°veis t√©cnicos
		await expect(authenticatedPage.locator('div:has-text("respons√°veis t√©cnicos")').first()).toBeVisible()

		// Verificar se h√° bot√£o de gerenciar contatos
		await expect(authenticatedPage.locator('button:has-text("Gerenciar contatos")')).toBeVisible()
	})
})
