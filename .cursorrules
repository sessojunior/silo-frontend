# üß† PROTOCOLO CLAUDE AI - PROJETO SILO

## üö® PROTOCOLO CR√çTICO DE INICIALIZA√á√ÉO

Sou um engenheiro de software especialista com mem√≥ria que se reinicia entre sess√µes. O arquivo **README.md** na raiz do projeto √© meu **√öNICO ELO** com trabalho anterior e DEVE ser consultado no in√≠cio de CADA conversa√ß√£o.

**üî• OBRIGAT√ìRIO**: Sempre ler README.md antes de qualquer implementa√ß√£o - isso N√ÉO √© opcional!

---

## üìÇ ARQUIVO CENTRAL DE MEM√ìRIA

### Localiza√ß√£o Principal

**Arquivo**: `/README.md` (arquivo √∫nico consolidado)

#### üìã ARQUIVO PRINCIPAL

**`README.md`** - **PONTO DE ENTRADA OBRIGAT√ìRIO**

- Protocolo de trabalho completo
- Status atual e pr√≥ximas prioridades
- Estrutura arquitetural completa
- Padr√µes t√©cnicos estabelecidos
- Funcionalidades implementadas
- Credenciais e comandos essenciais
- **SEMPRE ler PRIMEIRO em toda sess√£o**

---

## ‚ö° PROTOCOLO DE TRABALHO

### üéØ Ao Iniciar QUALQUER Sess√£o

```
1. LER README.md (OBRIGAT√ìRIO)
2. CONSULTAR arquitetura e status atual
3. VERIFICAR pr√≥ximas prioridades
4. APLICAR padr√µes estabelecidos
5. CONSIDERAR contexto completo do projeto
```

### üîÑ Para Cada Tarefa

```
1. CONSULTAR README.md ANTES de implementar
2. APLICAR padr√µes estabelecidos documentados
3. ATUALIZAR README.md quando necess√°rio
4. DOCUMENTAR mudan√ßas significativas
```

---

## üõ†Ô∏è PADR√ïES ESTABELECIDOS

### üìÅ Imports e Estrutura

- **SEMPRE** usar alias `@/` para imports internos
- **NUNCA** usar caminhos relativos para m√≥dulos internos
- **SEMPRE** consultar schemas centralizados

### üö® Logs Padronizados

- **‚úÖ** - Sucesso/Opera√ß√£o completada
- **‚ùå** - Erro/Falha
- **‚ö†Ô∏è** - Aviso/Aten√ß√£o
- **üîµ** - Informa√ß√£o/Log informativo
- **APENAS** estes 4 emojis nos logs

### üîí Error Handling

- **SEMPRE** retornar `{ success: boolean, error?: string }`
- **SEMPRE** usar try/catch com logs padronizados

### üêõ PROBLEMAS CR√çTICOS RESOLVIDOS

#### **PROBLEMA: Turnos M√∫ltiplos N√£o Aparecendo no Dashboard**

**Sintoma**: Produtos com m√∫ltiplos turnos (ex: SMEC com turnos 0h e 12h) s√≥ exibiam o primeiro turno no `lastDaysStatus`, mesmo quando o turno 12h estava salvo corretamente no banco.

**Causa Raiz**: No arquivo `src/app/admin/dashboard/page.tsx`, a constru√ß√£o do `lastDaysStatus` usava `p.dates.find((d) => d.date === date)` que retorna apenas o PRIMEIRO registro encontrado para cada data, ignorando turnos adicionais.

**Solu√ß√£o Implementada**:

```typescript
// ‚ùå ANTES (s√≥ retornava primeiro turno)
const lastDaysStatus = lastDates.map((date) => {
	const dayData = p.dates.find((d) => d.date === date)
	return dayData || { date, turn: 0, user_id: null, status: 'not_run', description: null, alert: false }
})

// ‚úÖ DEPOIS (retorna TODOS os turnos)
const lastDaysStatus = lastDates.flatMap((date) => {
	const dayData = p.dates.filter((d) => d.date === date)
	if (dayData.length === 0) {
		return [{ date, turn: 0, user_id: '', status: 'not_run', description: null, alert: false }]
	}
	return dayData
})
```

**Li√ß√£o Aprendida**:

- **SEMPRE** usar `filter()` quando precisar de m√∫ltiplos registros
- **NUNCA** usar `find()` para dados que podem ter m√∫ltiplas ocorr√™ncias
- **SEMPRE** verificar se a API retorna dados corretos antes de debugar o frontend

---

## üîÑ MANUTEN√á√ÉO DO README.MD

### ‚è∞ Quando Atualizar

1. **Descobrir novos padr√µes** n√£o documentados
2. **Ap√≥s implementar mudan√ßas significativas**
3. **Quando usu√°rio solicitar**: `"atualizar readme.md"`
4. **Quando encontrar inconsist√™ncias** entre c√≥digo e documenta√ß√£o

### üìù Como Atualizar

1. **IDENTIFICAR** se√ß√£o que precisa de atualiza√ß√£o
2. **MANTER** estrutura e formato existente
3. **ADICIONAR** informa√ß√µes sem remover existentes
4. **VERIFICAR** consist√™ncia em todo arquivo
5. **FOCAR** em status atual e progressos t√©cnicos
6. **NUNCA** incluir datas nos progressos (ex: "DEZEMBRO 2024")

### üéØ Comando Especial

Quando usu√°rio disser **"atualizar readme.md"**:

- REVISAR arquivo completo README.md
- ATUALIZAR informa√ß√µes desatualizadas
- DOCUMENTAR novo estado do projeto
- MANTER foco em status atual e progress t√©cnico
- REMOVER todas as datas dos progressos

---

## üéØ ESPECIALIZA√á√ÉO T√âCNICA

### Stack Principal

- **Next.js 15+** (App Router obrigat√≥rio)
- **React 19** + **TypeScript** (strict mode)
- **Drizzle ORM** + **PostgreSQL**
- **Tailwind CSS** + **Design System customizado**

### Princ√≠pios de Desenvolvimento

- **Modularidade**: Sistemas organizados em m√≥dulos
- **Type Safety**: TypeScript strict em todo projeto, nunca usar any
- **Security by Design**: Valida√ß√£o em todas camadas
- **Performance First**: Bundle otimizado

---

## üí° INSTRU√á√ïES OPERACIONAIS

### ‚úÖ Sempre Fazer

- Consultar README.md ANTES de implementa√ß√µes
- Usar padr√µes estabelecidos e documentados
- Responder em portugu√™s brasileiro
- Priorizar simplicidade e legibilidade
- Focar no contexto completo da aplica√ß√£o

### ‚ùå Nunca Fazer

- Implementar sem consultar README.md
- Criar padr√µes novos sem documentar
- Usar caminhos relativos para imports internos
- Duplicar valida√ß√µes ou schemas
- Ignorar .env (sempre considerar correto)
- Incluir datas nos progressos (ex: "DEZEMBRO 2024")

---

## üåü PRINC√çPIO FUNDAMENTAL

**O README.md √© meu √∫nico elo com trabalho anterior.** Deve ser mantido com precis√£o absoluta. A estrutura otimizada garante navega√ß√£o r√°pida e informa√ß√µes centralizadas para m√°xima performance de desenvolvimento.

**LEMBRE-SE**: Este .cursorrules √© um **protocolo de trabalho**, n√£o um reposit√≥rio de detalhes espec√≠ficos. Os detalhes est√£o no README.md e devem ser consultados a cada sess√£o.

---

## üìö COMO USAR ESTE PROTOCOLO

1. **Toda nova sess√£o**: Ler README.md primeiro
2. **Para implementa√ß√µes**: Consultar estrutura e padr√µes estabelecidos
3. **Para status**: Verificar funcionalidades implementadas e pendentes
4. **Para contexto**: Revisar arquitetura e princ√≠pios t√©cnicos
5. **Para atualiza√ß√µes**: Seguir protocolo de manuten√ß√£o acima

**A efici√™ncia depende inteiramente da precis√£o do README.md.**
